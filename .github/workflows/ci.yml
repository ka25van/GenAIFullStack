name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies (Backend)
        run: |
          cd backend
          npm install

      - name: Install Dependencies (Frontend)
        run: |
          cd frontend
          npm install

      - name: Run Linting (Backend & Frontend)
        run: |
          cd backend && npm run lint
          cd ../frontend && npm run lint

      - name: Run Tests (Backend & Frontend)
        run: |
          cd backend && npm test
          cd ../frontend && npm test

      - name: Build Project (Frontend & Backend)
        run: |
          cd backend && npm run build
          cd ../frontend && npm run build

  docker:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build & Push Backend Docker Image
        run: |
          docker build -t genaifullstack-backend:latest ./backend
          docker tag genaifullstack-backend:latest your-dockerhub-username/genaifullstack-backend:latest
          docker push your-dockerhub-username/genaifullstack-backend:latest

      - name: Build & Push Frontend Docker Image
        run: |
          docker build -t genaifullstack-frontend:latest ./frontend
          docker tag genaifullstack-frontend:latest your-dockerhub-username/genaifullstack-frontend:latest
          docker push your-dockerhub-username/genaifullstack-frontend:latest

  deploy:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster genaifullstack-cluster --service genaifullstack-service --force-new-deployment
